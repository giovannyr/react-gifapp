{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","evt","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","image","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAe5C,OACI,0BAAMC,SATW,SAACC,GAClBA,EAAIC,iBACDJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC7CN,EAAc,OAMd,2BAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAdrB,SAACP,GACtBF,EAAcE,EAAIQ,OAAOF,Y,uBCPpBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,0FAC4EC,UAAUH,GADtF,sBAEII,MAAMF,GAFV,cAEbG,EAFa,gBAGEA,EAASC,OAHX,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAsB,IAArBJ,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGpC,OAFAc,QAAQC,IAAI,CAACN,KAAIC,QAAOV,QAGpB,yBAAKgB,UAAU,8CACX,yBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,2BAAIA,KCJHS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAgBtC,OAVAC,qBAAU,WACN1B,EAAQC,GACH0B,MAAK,SAAAb,GACFW,EAAS,CACLjB,KAAMM,EACNS,SAAS,SAGtB,CAACtB,IAEGuB,EDdwBI,CAAa3B,GAAhCa,EADuB,EAC5BN,KAAae,EADe,EACfA,QAEpB,OACI,oCACI,wBAAIJ,UAAU,oDAAoDlB,GAEhEsB,GAAW,uBAAGJ,UAAU,sDAAb,eAEb,yBAAKA,UAAU,aAEPL,EAAOJ,KAAI,SAACmB,GAAD,OACP,kBAAC,EAAD,eACIC,IAAKD,EAAMjB,IACPiB,UEdnBE,EAAe,WAAO,IAAD,EACM5C,mBAAS,CAAC,WADhB,mBACvBQ,EADuB,KACXT,EADW,KAG9B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BACKS,EAAWe,KAAI,SAACT,GAAD,OACZ,kBAAC,EAAD,CACI6B,IAAK7B,EACLA,SAAUA,U,MCXlC+B,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.da7aa046.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputValue = (evt) => {\r\n        setInputValue(evt.target.value);\r\n    };\r\n\r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories( categories => [inputValue, ...categories]);\r\n            setInputValue('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" value={inputValue} onChange={handleInputValue} />\r\n        </form>\r\n    );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=fm7ytKknTqPU4HYrk1xDTDQSrsmiNQi7&q=${encodeURI(category)}&limit=10`;\r\n    const response = await fetch(url);\r\n    const {data} = await response.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    console.log({id, title, url});\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__zoomInDown\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__flipInX animate__slow\">{category}</h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash animate__delay-2s\">cargando...</p> }\r\n            \r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map((image) => (\r\n                        <GifGridItem \r\n                            key={image.id}\r\n                            {...image}                            \r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(images => {\r\n                setState({\r\n                    data: images, \r\n                    loading: false\r\n                });\r\n            });\r\n    }, [category]);\r\n\r\n    return state; // {data: [], loading: true};\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nexport const GifExpertApp = () => {\r\n    const [categories, setCategories] = useState([\"Homero\"]);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr />\r\n            <ol>\r\n                {categories.map((category) => (\r\n                    <GifGrid \r\n                        key={category}\r\n                        category={category}                        \r\n                    />\r\n                ))}\r\n            </ol>\r\n        </>\r\n    );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { GifExpertApp } from \"./GifExpertApp\";\nimport \"./index.css\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}